@model SupaSpeedGrader.Models.GradeModel

@{ 
    ViewBag.Title = "Grade";

    string defaultColor = "white";
    string highlightColor = "lightgray";
    string[] shownSet = new string[10];
    Model.studentAt = 0;

    string[] s0 = { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" };
    string[] s10 = { "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" };
    string[] s20 = { "21", "22", "23", "24", "25", "26", "27", "28", "29", "30" };
    string[] s30 = { "31", "32", "33", "34", "35", "36", "37", "38", "39", "40" };
    string[] s40 = { "41", "42", "43", "44", "45", "46", "47", "48", "49", "50" };
    string[] s50 = { "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" };
    string[] s60 = { "61", "62", "63", "64", "65", "66", "67", "68", "69", "70" };
    string[] s70 = { "71", "72", "73", "74", "75", "76", "77", "78", "79", "80" };
    string[] s80 = { "81", "82", "83", "84", "85", "86", "87", "88", "89", "90" };
    string[] s90 = { "91", "92", "93", "94", "95", "96", "97", "98", "99", "100" };
    int a = (Model.questionOn/ 10);
    if (Model.questionNum % 10 == 0)
    {
        a--;
    }
    if (a == 0)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s0[x];
        }
    }
    else if (a == 1)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s10[x];
        }
    }
    else if (a == 2)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s20[x];
        }
    }
    else if (a == 3)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s30[x];
        }
    }
    else if (a == 4)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s40[x];
        }
    }
    else if (a == 5)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s50[x];
        }
    }
    else if (a == 6)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s60[x];
        }
    }
    else if (a == 7)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s70[x];
        }
    }
    else if (a == 8)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s80[x];
        }
    }
    else if (a == 9)
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = s90[x];
        }
    }
    else
    {
        for (int x = 0; x < 10; ++x)
        {
            shownSet[x] = "Error";
        }
    }

}
<head>
    <link rel="stylesheet" type="text/css" href="StyleSheet1.css" />
    <script type="text/javascript">
    </script>
    <!--<style>
        /* Style The Dropdown Button */
        .dropbtn {
            background-color: #4CAF50;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

        /* The container <div> - needed to position the dropdown content */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        /* Dropdown Content (Hidden by Default) */
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            /* Links inside the dropdown */
            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

                /* Change color of dropdown links on hover */
                .dropdown-content a:hover {
                    background-color: #f1f1f1
                }

        /* Show the dropdown menu on hover */
        .dropdown:hover .dropdown-content {
            display: block;
        }

        /* Change the background color of the dropdown button when the dropdown content is shown */
        .dropdown:hover .dropbtn {
            background-color: #3e8e41;
        }
    </style>
        -->
</head>
<body>
    <div style="display: flex; border-bottom:1px solid black">
        <div style="float:left; width:52%">
            <h3 style="color: #21314d"> @Model.questionName </h3>
        </div>
        <!--Navigation Bar-->
        <div style="float:left; width:4%">
            <input type="button" style="width:100%; background-color:#D3D3D3" value="<<" onclick=down10()/>
        </div>
        <div style="float:left; width:40%" id="navBar">
            @for (int x = 0; x < 10; ++x)
            {
                string color = "lightGrey";
                string name = "Question" + x;
                if (x == Model.questionOn)
                {
                    color = "white";
                }
                <div style="float:left; width:10%">
                    <input type="button" style="width:100%; background-color:@color" value="@shownSet[x]"  id="@name" onclick=changeQuestion()/>
                </div>
            }
        </div>     
        <div style="float:left; width:4%">
            <input type="button" style="width:100%; background-color:#D3D3D3" value=">>" onclick=up10()/>
        </div>
    </div>
    <p></p>
    <div>
        <!--- left column--->
        <div style="float:left; width: 75%">
            <!--- question name (under nav bar) --->
            <div>
                <p>@Model.question </p>
            </div>
            <!--- total response container --->

            <div>
                <ul style=" list-style-type: none; padding: 0; overflow: auto; width:100%; max-height:1000px">
                    @for (int x = 0; x < Model.numStudent; x++)
                    {
                        <li id='response' style="background-color:white">
                            @{ string color = defaultColor;
                                string remp = "response" + x;
                            }
                            @if (x == Model.studentAt)
                            {
                                color = highlightColor;
                            }
                            <div style="display:flex; background-color:transparent">
                                <div onclick="highlightResponse(this)" style="float:left; width:15%; background-color:@color" id="@remp">
                                    <p> @Model.names[x]  </p>
                                </div>
                                <div onclick="highlightResponse(this)" style="float:left; width:50%;  border:1px solid black; border-radius:5px; background-color:white" id="@remp"> 
                                    <p>@Model.namesGrades[Model.names[x]][0]</p>
                                </div>

                                <div onclick="highlightResponse(this)" style ="float:left; width:35%; background-color:@color" id="@remp"> 
                                    @{
                                        string demo = "demo" + x;
                                    }
                                    <p style="text-align:center"> Grade :<input type="number" style="height:20px; width:100px; border:1px solid black; background-color:transparent " id='@Model.names[x]' value='@Model.namesGrades[Model.names[x]][1]' onchange=myFunction('@Model.names[x]','@demo',@x) /> / @Model.gradeOutOf</p>

                                    <p id="@demo"></p>

                                </div>
                            </div>
                        </li>
                        <p></p>
                                        }
                </ul>
            </div>

        </div>
        <!--- right column--->
        <div style="float:left; width: 25%;">
            <!--- top row--->
            <div style="display: flex">
                <div style="float:left; width:33%; border-right:2px solid black;">
                    <form><p style="color: blue; font-size:70%">Highlight Keyword</p></form>

                </div>
                <div style="float:left; width:33%; border-right:2px solid black;">
                    <form><p style="color: blue;font-size:70%"> Jump to...</p></form>
                </div>
                <div style="float:left; width:33%; ">
                    <form><p style="color: blue; font-size:70%"> Autograde and Filter</p></form>
                </div>
            </div>
            <!--- Rubic--->
            <div>
                <p>@Model.rubicTitle</p>
                @for (int i = 0; i < Model.rubicRows; ++i)
                {<div style="display: flex">
                     <div style="float:left;width: @Model.width%; background-color:grey; border:1px solid black" >
                         @Model.rubic[i][0]
                     </div>
                        @for (int j = 1; j < Model.rubicCols; ++j)
                        {

                            string clap = "rubr" + i;

                            <div style="float:left; width:@Model.width%;border:1px solid black">
                                <input onclick=highlightRubic(this) type="button" style="width:100%; background-color:white; border:none" value="@Model.rubic[i][j]" id='@clap' />
                            </div>
                        }
                    </div>

                }

            </div>
            <p></p>
            <!--- next row--->
            <div style="display: flex">
                <div style="float:left; width:33%;">
                    <form><input type="button" style="width:100%; background-color:#D3D3D3" value=" Revert" onclick=revert() /></form>
                </div>
                <div style="float:left; width:33%;">
                    <form><input type="button" style="width:100%; background-color:#D3D3D3" value="Save" onclick=save() /></form>
                </div>
                <div style="float:left; width:33%;">
                    <form><input type="button" style="width:100%; background-color:#D3D3D3" value="Save&Next" onclick=saveNext() /></form>
                </div>
            </div>
            <p></p>
            <!--- Comment Box--->
            <div>
                <textarea style="height:100px; width:100%; border:1px solid black; border-radius:5px" name="comment">@Model.namesGrades[Model.names[Model.studentAt]][2]</textarea>
                <input type="button" style="width:30%; background-color:#D3D3D3" value="Clear" onclick=clear() />
            </div>
            <!--- Grade Box-->
            <div style="height:10%">
                <p>Grade : <input type="number" style="height:20px; width:100px; border:1px solid black;overflow:visible " id="grade" value="@Model.namesGrades[Model.names[Model.studentAt]][1]" onchange=myGrade()/> /@Model.gradeOutOf</p>
            </div>
            <p id="graded"></p>
        </div>
    </div>

    <p id="action"></p>
    <p id="action2"></p>
    <p id="action3"></p>
    <script>
   
        function down10() {
            document.getElementById("action").innerHTML = "You pressed the down button";
            @{
                if (shownSet[0] == s10[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s0[x];
                    }
                }
                else if (shownSet[0] == s20[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s10[x];
                    }
                }
                else if (shownSet[0] == s30[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s20[x];
                    }
                }
                else if (shownSet[0] == s40[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s30[x];
                    }
                }
                else if (shownSet[0] == s50[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s40[x];
                    }
                }
                else if (shownSet[0] == s60[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s50[x];
                    }
                }
                else if (shownSet[0] == s70[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s60[x];
                    }
                }
                else if (shownSet[0] == s80[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s70[x];
                    }
                }
                else if (shownSet[0] == s90[0])
                {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s80[x];
                    }
                }
                }
            @{ int y = 0;}
            for (var x = 0; x < 11; ++x)
            {
                @{string question = "Question" + y; }
                    document.getElementById(@question).value = @shownSet[y];
                @{y++;}
            }
            
             }



        function changeQuestion() {


        }
        function up10() {
            @{
                if (shownSet[0] == s0[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s10[x];
                    }
                }
                else if (shownSet[0] == s10[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s20[x];
                    }
                }
                else if (shownSet[0] == s20[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s30[x];
                    }
                }
                else if (shownSet[0] == s30[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s40[x];
                    }
                }
                else if (shownSet[0] == s40[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s50[x];
                    }
                }
                else if (shownSet[0] == s50[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s60[x];
                    }
                }
                else if (shownSet[0] == s60[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s70[x];
                    }
                }
                else if (shownSet[0] == s70[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s80[x];
                    }
                }
                else if (shownSet[0] == s80[0]) {
                    for (int x = 0; x < 10; ++x)
                    {
                        shownSet[x] = s90[x];
                    }
                }
            }
            @{ y = 0;}
            for (var x = 0; x < 11; ++x)
            {
                @{string question1 = "Question" + y; }

                    document.getElementById(@question1).value = @shownSet[y];
                @{y++;}
            }
            document.getElementById("action").innerHTML = "You pressed up button";
        }
        
        function myFunction(x, z, num) {
            var y = document.getElementById(x).value;
            document.getElementById(z).innerHTML = "You wrote: " + y;
            if (num ==@Model.studentAt) {
                document.getElementById("grade").value = y;
            }

        }
        function myGrade() {
            var y = document.getElementById("grade").value;
            document.getElementById("graded").innerHTML = "You wrote: " + y;
            document.getElementById("@Model.names[Model.studentAt]").value = y;

        }
        function revert() {
            document.getElementById("action").innerHTML = "You pressed revert";
        }
        function save() {
            document.getElementById("action").innerHTML = "You pressed save-------------@Model.studentAt";
        }
        function clear() {
            document.getElementByName("comment").value = "";
            document.getElementById("action").innerHTML = "You pressed the click button";
        }


        @*function saveNext(source) {
            document.getElementById("action").innerHTML = "You pressed save&next with @Model.studentAt out of @Model.names.Count()";    //only says 0, will update only to 0
            //remove highlight from initial
           @{ string y = Model.studentAt + "2";
               }
            var responses = document.querySelectorAll('#' + source.id);
            for (var i = 0; i < responses.length; i++) {
                updateResponseHighlight(responses[i], false);
            }

         //   updateResponseHighlight("@Model.studentAt",false);
         //   updateResponseHighlight("@y", false);
            @{
                Model.studentAt = (Model.studentAt + 1) % Model.names.Count();
            }
            //add highlight to update
          //  updateResponseHighlight("@Model.studentAt", true);
          //  updateResponseHighlight("@y", true);

            for (var i = 0; i < responses.length; i++){
                updateResponseHighlight(responses[responses.length], true);
            }

            document.getElementById("grade").value = @Model.namesGrade[Model.names[Model.studentAt]];
            document.getElementById("action2").innerHTML = "You pressed save&next with @Model.studentAt out of @Model.names.Count()";   //only says 1 and updates once
        }*@

        function saveNext() {               //used for save and next button for next question highlighting
            document.getElementById("action").innerHTML = "You pressed save&next with @Model.studentAt out of @Model.names.Count()";    //only says 0, will update only to 0

            @{

                string nowBoi = "#response" +Model.studentAt;
                Model.AddOneToStudentAt(ref Model.studentAt);
                string nextBoi = "#response" + Model.studentAt;
            }

            var responseToHighlight = document.querySelectorAll("@nextBoi");
            var responseToDeselect = document.querySelectorAll("@nowBoi");



            for (var i = 0; i < responseToDeselect.length; i++) {
                responseToDeselect[i].style.backgroundColor = "@defaultColor";
            }

            for (var j = 0; j < responseToHighlight.length; j++) {
                responseToHighlight[j].style.backgroundColor = "@highlightColor";
            }



              document.getElementById("action2").innerHTML = "You pressed save&next with @Model.studentAt out of @Model.names.Count()";   //only says 1 and updates once

        }



        @*function updateResponseHighlight(x, highlight) {
            if (highlight == true) {
                x.style.backgroundColor = "@highlightColor";
            }
            else {
                x.style.backgroundColor = "@defaultColor";
            }
        }*@


        function highlightRubic(source) {

            var buttons = document.querySelectorAll('#' + source.id);


            for (var x = 0; x < buttons.length; x++) {
                buttons[x].style = "width:100%; background-color:white; border:none";
            }

            source.style = "width:100%; background-color:lightgreen; border:none"

        }



        @*function highlightResponse(source) {
            var responseCurrent = document.querySelectorAll('#' + source.id);
            @{
                string potato ="#response" + Model.studentAt;
            }
            var responseLast = document.querySelectorAll(@potato);
            for (var i = 0; i < responseLast.length; i++) {
                responseLast[i].style.backgroundColor = @defaultColor;
            }
            for (var i = 0; i < responseCurrent.length; i++) {
                responseCurrent[i].style.backgroundColor = @highlightColor;
            }
            Model.studentAt = parseInt(source.id.substr(9));
        }*@



 //       function highlightResponse(source) {
            //var responses = document.querySelectAll('#' + source.id)
            //  for (var i = 0; i < responses.length; i++) {
            //        responses[i] =
            //}
 //           document.getElementById("action").innerHTML = "POTATO";
 //           var responses = document.querySelectorAll('#response');
 //           for (var x = 0; x < responses.length) {
  //              responses[x].style = "background-color:white";
 //           }
  //          source.style = "background-color:lightgreen"

//        }
    </script>
</body>





